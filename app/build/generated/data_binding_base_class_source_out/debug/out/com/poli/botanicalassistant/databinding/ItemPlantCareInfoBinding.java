// Generated by view binder compiler. Do not edit!
package com.poli.botanicalassistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.lzyzsd.circleprogress.DonutProgress;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.poli.botanicalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlantCareInfoBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView careInfoText;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final DonutProgress humidityProgress;

  @NonNull
  public final MaterialTextView lightText;

  @NonNull
  public final DonutProgress temperatureProgress;

  @NonNull
  public final MaterialTextView waterAmountText;

  private ItemPlantCareInfoBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView careInfoText, @NonNull Guideline guideline,
      @NonNull DonutProgress humidityProgress, @NonNull MaterialTextView lightText,
      @NonNull DonutProgress temperatureProgress, @NonNull MaterialTextView waterAmountText) {
    this.rootView = rootView;
    this.careInfoText = careInfoText;
    this.guideline = guideline;
    this.humidityProgress = humidityProgress;
    this.lightText = lightText;
    this.temperatureProgress = temperatureProgress;
    this.waterAmountText = waterAmountText;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlantCareInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlantCareInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_plant_care_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlantCareInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.care_info_text;
      MaterialTextView careInfoText = ViewBindings.findChildViewById(rootView, id);
      if (careInfoText == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.humidity_progress;
      DonutProgress humidityProgress = ViewBindings.findChildViewById(rootView, id);
      if (humidityProgress == null) {
        break missingId;
      }

      id = R.id.light_text;
      MaterialTextView lightText = ViewBindings.findChildViewById(rootView, id);
      if (lightText == null) {
        break missingId;
      }

      id = R.id.temperature_progress;
      DonutProgress temperatureProgress = ViewBindings.findChildViewById(rootView, id);
      if (temperatureProgress == null) {
        break missingId;
      }

      id = R.id.water_amount_text;
      MaterialTextView waterAmountText = ViewBindings.findChildViewById(rootView, id);
      if (waterAmountText == null) {
        break missingId;
      }

      return new ItemPlantCareInfoBinding((MaterialCardView) rootView, careInfoText, guideline,
          humidityProgress, lightText, temperatureProgress, waterAmountText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

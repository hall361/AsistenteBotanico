// Generated by view binder compiler. Do not edit!
package com.poli.botanicalassistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.poli.botanicalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlantBasicInfoBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView classificationText;

  @NonNull
  public final MaterialTextView commonNameText;

  @NonNull
  public final MaterialTextView plantBasicInfoText;

  @NonNull
  public final ImageView plantImage;

  @NonNull
  public final MaterialTextView scientificNameText;

  private ItemPlantBasicInfoBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView classificationText, @NonNull MaterialTextView commonNameText,
      @NonNull MaterialTextView plantBasicInfoText, @NonNull ImageView plantImage,
      @NonNull MaterialTextView scientificNameText) {
    this.rootView = rootView;
    this.classificationText = classificationText;
    this.commonNameText = commonNameText;
    this.plantBasicInfoText = plantBasicInfoText;
    this.plantImage = plantImage;
    this.scientificNameText = scientificNameText;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlantBasicInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlantBasicInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_plant_basic_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlantBasicInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.classification_text;
      MaterialTextView classificationText = ViewBindings.findChildViewById(rootView, id);
      if (classificationText == null) {
        break missingId;
      }

      id = R.id.common_name_text;
      MaterialTextView commonNameText = ViewBindings.findChildViewById(rootView, id);
      if (commonNameText == null) {
        break missingId;
      }

      id = R.id.plant_basic_info_text;
      MaterialTextView plantBasicInfoText = ViewBindings.findChildViewById(rootView, id);
      if (plantBasicInfoText == null) {
        break missingId;
      }

      id = R.id.plant_image;
      ImageView plantImage = ViewBindings.findChildViewById(rootView, id);
      if (plantImage == null) {
        break missingId;
      }

      id = R.id.scientific_name_text;
      MaterialTextView scientificNameText = ViewBindings.findChildViewById(rootView, id);
      if (scientificNameText == null) {
        break missingId;
      }

      return new ItemPlantBasicInfoBinding((MaterialCardView) rootView, classificationText,
          commonNameText, plantBasicInfoText, plantImage, scientificNameText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

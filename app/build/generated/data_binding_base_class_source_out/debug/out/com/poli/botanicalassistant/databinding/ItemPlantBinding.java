// Generated by view binder compiler. Do not edit!
package com.poli.botanicalassistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.poli.botanicalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlantBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ownedIcon;

  @NonNull
  public final MaterialTextView plantClassification;

  @NonNull
  public final MaterialTextView plantCommonName;

  @NonNull
  public final ImageView plantImage;

  private ItemPlantBinding(@NonNull CardView rootView, @NonNull ImageView ownedIcon,
      @NonNull MaterialTextView plantClassification, @NonNull MaterialTextView plantCommonName,
      @NonNull ImageView plantImage) {
    this.rootView = rootView;
    this.ownedIcon = ownedIcon;
    this.plantClassification = plantClassification;
    this.plantCommonName = plantCommonName;
    this.plantImage = plantImage;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_plant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.owned_icon;
      ImageView ownedIcon = ViewBindings.findChildViewById(rootView, id);
      if (ownedIcon == null) {
        break missingId;
      }

      id = R.id.plant_classification;
      MaterialTextView plantClassification = ViewBindings.findChildViewById(rootView, id);
      if (plantClassification == null) {
        break missingId;
      }

      id = R.id.plant_common_name;
      MaterialTextView plantCommonName = ViewBindings.findChildViewById(rootView, id);
      if (plantCommonName == null) {
        break missingId;
      }

      id = R.id.plant_image;
      ImageView plantImage = ViewBindings.findChildViewById(rootView, id);
      if (plantImage == null) {
        break missingId;
      }

      return new ItemPlantBinding((CardView) rootView, ownedIcon, plantClassification,
          plantCommonName, plantImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.poli.botanicalassistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.poli.botanicalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAboutUsWhatWeOfferBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final RecyclerView featureOfferedRecycler;

  @NonNull
  public final TextView welcomeMessage;

  @NonNull
  public final TextView whatWeOfferTitle;

  private ItemAboutUsWhatWeOfferBinding(@NonNull CardView rootView,
      @NonNull RecyclerView featureOfferedRecycler, @NonNull TextView welcomeMessage,
      @NonNull TextView whatWeOfferTitle) {
    this.rootView = rootView;
    this.featureOfferedRecycler = featureOfferedRecycler;
    this.welcomeMessage = welcomeMessage;
    this.whatWeOfferTitle = whatWeOfferTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAboutUsWhatWeOfferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAboutUsWhatWeOfferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_about_us_what_we_offer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAboutUsWhatWeOfferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feature_offered_recycler;
      RecyclerView featureOfferedRecycler = ViewBindings.findChildViewById(rootView, id);
      if (featureOfferedRecycler == null) {
        break missingId;
      }

      id = R.id.welcome_message;
      TextView welcomeMessage = ViewBindings.findChildViewById(rootView, id);
      if (welcomeMessage == null) {
        break missingId;
      }

      id = R.id.what_we_offer_title;
      TextView whatWeOfferTitle = ViewBindings.findChildViewById(rootView, id);
      if (whatWeOfferTitle == null) {
        break missingId;
      }

      return new ItemAboutUsWhatWeOfferBinding((CardView) rootView, featureOfferedRecycler,
          welcomeMessage, whatWeOfferTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
